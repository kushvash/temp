class Solution {
public:
    vector<vector<int>> merge(vector<vector<int>>& intervals) {
        int n=intervals.size(), lastend=0;
        vector<vector<int>> ans;
        vector<int> curr;

        sort(intervals.begin(), intervals.end());

        for(int i=0; i<n; i++) {
            if(curr.size()==0) {
                curr.push_back(intervals[i][0]);
                lastend=intervals[i][1];
            }else if(intervals[i][0]<=lastend){
                lastend=intervals[i][1];
            }else if(intervals[i][0]>lastend || i==n-1){
                curr.push_back(lastend);
                ans.push_back(curr);
                curr.pop_back();
                curr.pop_back();

                curr.push_back(intervals[i][0]);
                lastend=intervals[i][1];
            }
        }

        if (!curr.empty()) {
            curr.push_back(lastend);
            ans.push_back(curr);
        }

        return ans;
    }
};